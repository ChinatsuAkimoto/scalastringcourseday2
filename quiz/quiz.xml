<?xml version="1.0" encoding="utf-8"?>
<quiz
    messages_intro="「Day 2 リテラル・補間子・特殊な文字」"
    title="Day 2 リテラル・補間子・特殊な文字"
    shuffle_questions="true"
    shuffle_choices="true"
    show_correct_answer="false"
    show_instant_result="true"
    passing_score="100"
    movable="false"
    sound="true"
    lang="ja">
  <!--Day2-1-->
  <question
      statement="Charの説明として間違っているものを選べ。"
      feedback_for_correct_answer="Charは参照型であり、16bit固定長の整数型です。Scalaにプリミティブ型は存在しません。Javaのプリミティブ型相当の参照型はAnyVal、Javaの参照型相当の参照型はAnyRefを継承しています。"
      feedback_for_incorrect_answer="Scalaにプリミティブ型は存在しません。">
      type="ma">
    <choices>
      <choice answer="true">プリミティブ型</choice>
      <choice feedback="Charは参照型です。参照型は全てAnyクラスを継承しています。Javaの参照型相当のクラスはAnyRefクラスを継承しています。">参照型</choice>
      <choice feedback="Charはクラスです。Javaのプリミティブ型相当の参照型はAnyValクラスを継承しています。">クラス</choice>
      <choice feedback="Charは16bit固定長の整数型です。">整数型</choice>
    </choices>
  </question>
  <!--Day2-2-->
  <question
      statement="Charの容量は何bitですか。"
      feedback_for_correct_answer="Charは16bit固定長の整数型です。ちなみにC/C++のcharは8bit固定長です。"
      feedback_for_incorrect_answer="Charは16bit固定長の整数型です。">
      type="ma">
    <choices>
      <choice answer="true">16bit</choice>
      <choice feedback="IntやFloatは32bitですが、CharやShortは16bitです。">32bit</choice>
      <choice feedback="Charは16bitです。ちなみにUnicodeの文字領域は21bitです。">21bit</choice>
      <choice feedback="C/C++のcharは8bitですが、ScalaのCharは16bitです。">8bit</choice>
    </choices>
  </question>
  <!--Day2-3-->
  <question
      statement="Unicodeの文字領域は何bitですか。"
      feedback_for_correct_answer="Unicodeの文字領域は21bitです。BMP領域は16bitです。"
      feedback_for_incorrect_answer="Unicodeの文字領域は21bitです。">
      type="ma">
    <choices>
      <choice answer="true">21bit</choice>
      <choice feedback="BMP領域は16bitですが追加領域を含めると21bitです。16bit=65536文字の容量では中国・台湾の漢字を扱うのは無理です。">16bit</choice>
      <choice feedback="一般的にUnicodeのCode Pointは32bitのIntで扱われますが、Unicodeの文字領域は21bitです。">32bit</choice>
      <choice feedback="C/C++のcharは8bitですが、Unicodeの文字領域は21bitです。8bit=256文字の容量しかないので世界中の文字を扱うのは到底無理です。">8bit</choice>
    </choices>
  </question>
  <!--Day2-4-->
  <question
      statement="次のうち文字リテラルで表現できない文字はどれですか。"
      feedback_for_correct_answer="Unicodeの追加領域にある文字はSurrogate PairというCharの対で表現するためChar１つでは表現できません。Char１つで表現できない文字は文字リテラルで書くことはできません。"
      feedback_for_incorrect_answer="「𠮷」はSurrogate Pairで表すため文字リテラルでは表現できません。">
      type="ma">
    <choices>
      <choice answer="true">「𠮷」</choice>
      <choice feedback="「彁」はBMP領域にある文字なので文字リテラルで表現できます。ちなみに「彁」や「妛」は幽霊文字です。">「彁」</choice>
      <choice feedback="「〜」はBMP領域にある文字なので文字リテラルで表現できます。ちなみに波ダッシュと全角チルダはUnicode上別のCode Pointにそれぞれ存在します。">「〜」</choice>
      <choice feedback="「〇」はBMP領域にある文字なので文字リテラルで表現できます。ちなみに漢数字のゼロは「零」と「〇」の２種類存在します。">「〇」</choice>
      <choice feedback="「吉」はBMP領域にある文字なので文字リテラルで表現できます。ちなみに「吉」は有名な牛丼屋の頭文字ではないです。">「吉」</choice>
      <choice feedback="「仝」はBMP領域にある文字なので文字リテラルで表現できます。ちなみに「仝」や「〃」は同上記号です。">「仝」</choice>
    </choices>
  </question>
  <!--Day2-5-->
  <question
      statement="Stringの文字コードはどれですか。"
      feedback_for_correct_answer="Stringの文字コードはUTF-16BEです。Charは16bitでStringがChar配列のラッパークラスです。JVMは文字列をBig Endianで扱います。"
      feedback_for_incorrect_answer="Stringの文字コードはUTF-16BEです。">
      type="ma">
    <choices>
      <choice answer="true">UTF-16BE</choice>
      <choice feedback="JVMは文字列をBig Endianで扱います。">UTF-16LE</choice>
      <choice feedback="一般的にUTF-8のような可変長な符号化はメモリ上で操作する文字列には用いず、ストレージに記憶させるときに使われます。">UTF-8</choice>
      <choice feedback="Charは16bitでStringはChar配列のラッパークラスです。JVMは文字列をBig Endianで扱います。">UTF-32LE</choice>
      <choice feedback="Charは16bitでStringはChar配列のラッパークラスです。">UTF-32BE</choice>
      <choice feedback="StringやCharが用いる文字集合はUnicodeです。">windows-31j</choice>
    </choices>
  </question>
  <!--Day2-6-->
  <question
      statement="UnicodeのCode Pointの文字コードはどれですか。"
      feedback_for_correct_answer="Code Pointの文字コードはUTF-32BEで、一般的に32bitのIntで扱いますが、Code Pointそのものの容量は21bitです。"
      feedback_for_incorrect_answer="Code Pointの文字コードはUTF-32BEです。">
      type="ma">
    <choices>
      <choice answer="true">UTF-32BE</choice>
      <choice feedback="">UTF-16LE</choice>
      <choice feedback="">UTF-8</choice>
      <choice feedback="">UTF-32LE</choice>
      <choice feedback="">UTF-16BE</choice>
      <choice feedback="UnicodeのCode Pointについての問題なので、そもそもUnicodeではないwindows-31jは違います。">windows-31j</choice>
    </choices>
  </question>
  <!--Day2-7-->
  <question
      statement="Stringに存在しないエスケープシーケンスはどれですか。"
      feedback_for_correct_answer="8進数のエスケープシーケンスは0を表す\000から255を表す\377まで存在します。\400は存在しません。ちなみにInt型の8進数リテラルは2.10でdeprecatedになりました。"
      feedback_for_incorrect_answer="8進数のエスケープシーケンスは0を表す\000から255を表す\377まで存在します。\400は存在しません。">
      type="ma">
    <choices>
      <choice answer="true">\400</choice>
      <choice feedback="改ページ（Form Feed）を表すエスケープシーエンスです。">\f</choice>
      <choice feedback="8進数で0を表すエスケープシーエンスです。">\000</choice>
      <choice feedback="バックスペース（Back Space）を表すエスケープシーケンスです。">\b</choice>
      <choice feedback="水平タブ（Horizonrtal Tab）を表すエスケープシーケンスです。">\t</choice>
      <choice feedback="改行（New Line）を表すエスケープシーケンスです。">\n</choice>
    </choices>
  </question>
  <!--Day2-8-->
  <question
      statement="ショーン・コネリーが出演していない映画はどれですか。"
      feedback_for_correct_answer="「シェルブールの雨傘」は1964年公開のフランスのミュージカル映画です。"
      feedback_for_incorrect_answer="「シェルブールの雨傘」は1964年公開のフランスのミュージカル映画で、ショーン・コネリーは出演していません。">
      type="ma">
    <choices>
      <choice answer="true">"シェルブールの雨傘"</choice>
      <choice feedback="1965年公開の映画「007 ロシアより愛をこめて」でショーン・コネリーは前作の007シリーズ第1作に引き続き主演のジェームズ・ボンドを演じました。">f"${2+5}%3d ロシアより愛をこめて"</choice>
      <choice feedback="1991年公開の映画「ハイランダー2 甦る戦士」でショーン・コネリーは甦る戦士ラミレスを演じました。">s"""ハイランダー${1*2} 甦る戦士"""</choice>
      <choice feedback="2000年公開の映画「小説家を見つけたら」でショーン・コネリーは小説家の才能を持つジャマール少年を見つける隠遁小説家フォレスターを演じました。">"小説家を見つけたら"</choice>
      <choice feedback="1993年公開の日本企業によるアメリカ企業の買収に警鐘を鳴らす目的があったのかよく分からない映画「ライジング・サン」でショーン・コネリーはジョン・コナー警部を演じました。">"""ライジング\u30FBサン"""</choice>
      <choice feedback="インディ・ジョーンズ シリーズの第3作目となる1989年公開の映画「インディ・ジョーンズ/最後の聖戦」でショーン・コネリーはインディの父ヘンリー・ジョーンズ教授を演じました。">raw"インディ・ジョーンズ/最後の聖戦"</choice>
    </choices>
  </question>
 <!--Day2-9-->
  <question
      statement="OSに非依存なディレクトリやファイルのパスの区切り文字はどれですか。"
      feedback_for_correct_answer="OSに非依存なパスの区切り文字はFile.separatorです。System.getProperty(&quot;file.separator&quot;)でも取得できます。"
      feedback_for_incorrect_answer="OSに非依存なパスの区切り文字はFile.separatorです。">
      type="ma">
    <choices>
      <choice answer="true">File.separator</choice>
      <choice feedback="System.separatorは存在しません。File.separatorはOSに非依存なパスの区切り文字です。">System.separator</choice>
      <choice feedback="File.lineSeparatorは存在しません。System.lineSeparatorはOSに非依存な改行文字です。">File.lineSeparator</choice>
      <choice feedback="System.lineSeparatorはOSに非依存な改行文字です。">System.lineSeparator</choice>
      <choice feedback="File.pathSeparatorはOSに非依存なクラスパスの区切り文字です。">File.pathSeparator</choice>
      <choice feedback="System.pathSeparatorは存在しません。File.pathSeparatorはOSに非依存なクラスパスの区切り文字です。">System.pathSeparator</choice>
    </choices>
  </question>
 <!--Day2-10-->
  <question
      statement="OSに非依存なクラスパスの区切り文字はどれですか。"
      feedback_for_correct_answer="OSに非依存なクラスパスの区切り文字はSystem.getProperty(&quot;path.separator&quot;)です。File.pathSeparatorでも取得できます。"
      feedback_for_incorrect_answer="OSに非依存なクラスパスの区切り文字はSystem.getProperty(&quot;path.separator&quot;)です。">
      type="ma">
    <choices>
      <choice answer="true">System.getProperty("path.separator")</choice>
      <choice feedback="System.getProperty(&quot;file.separator&quot;)はOSに非依存なディレクトリやファイルのパスの区切り文字です。">System.getProperty("file.separator")</choice>
      <choice feedback="System.getProperty(&quot;line.separator&quot;)はOSに非依存な改行文字です。">System.getProperty("line.separator")</choice>
      <choice feedback="String.format(&quot;%n&quot;)はOSに非依存な改行文字です。">String.format("%n")</choice>
    </choices>
  </question>
</quiz>

